//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NTSIH.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Catalogo
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Catalogo()
        {
            this.mCita = new HashSet<mCita>();
            this.mPermisos = new HashSet<mPermisos>();
            this.mPermisos1 = new HashSet<mPermisos>();
            this.mPermisos2 = new HashSet<mPermisos>();
            this.mPersona = new HashSet<mPersona>();
            this.mPersona1 = new HashSet<mPersona>();
            this.mPersona2 = new HashSet<mPersona>();
            this.mPersona3 = new HashSet<mPersona>();
            this.rRol_Persona = new HashSet<rRol_Persona>();
        }
        private mAuditoria aud = new mAuditoria();
        public int registro_id { get; set; }
        public int catalogo_id { get; set; }
        public string nombre { get; set; }
        public string descripcion { get; set; }
        public bool estado { get; set; }
    
        public virtual mCatalogo mCatalogo { get; set; }
        public virtual mCatalogo mCatalogo1 { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<mCita> mCita { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<mPermisos> mPermisos { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<mPermisos> mPermisos1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<mPermisos> mPermisos2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<mPersona> mPersona { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<mPersona> mPersona1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<mPersona> mPersona2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<mPersona> mPersona3 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<rRol_Persona> rRol_Persona { get; set; }

        public string ObtenerRol(ref string Mensaje, string Persona_Id, int Registro_id)
        {
            int Rol_Id = 0;
            string Rol = null;
            string SentenciaSQL = "select nombre from catalogo where  registro_id in (";
            SentenciaSQL += "select rol_id from rrol_Persona where persona_id in ";
            SentenciaSQL += "(select registro_id from mPersona where identificacion='" + Persona_Id + "')";
            SentenciaSQL += ") order by descripcion asc";
            string SentenciaSQL2 = "select registro_id from catalogo where  registro_id in (";
            SentenciaSQL2 += "select  rol_id  from rrol_Persona where persona_id in ";
            SentenciaSQL2 += "(select registro_id from mPersona where identificacion='" + Persona_Id + "')";
            SentenciaSQL2 += ") order by descripcion asc";

            try
            {
                using (var conexion = new SIHEntities())
                {
                    // var studentName = ctx.Students.SqlQuery("Select * from Courses").ToList();
                    // string studentName = ctx.Database.SqlQuery<string>("Select studentname from Student where studentid=1").FirstOrDefault();

                    Rol = conexion.Database.SqlQuery<string>(SentenciaSQL).FirstOrDefault();
                    if (Rol != null)
                    {
                        Mensaje = "0000SENTENCIA EJECUTADA CORRECTAMENTE";
                        Rol_Id = Convert.ToInt32(conexion.Database.SqlQuery<int>(SentenciaSQL2).FirstOrDefault());
                    }
                    else
                    {
                        Mensaje = "0099NO TIENE ASIGNADO UN ROL LA PERSONA";
                    }
                }
            }
            catch (Exception ex)
            {
                Mensaje = "0020" + ex.Message;
            }
            string Log = aud.InsertarLog(Registro_id, Convert.ToInt32(Rol_Id), 1, SentenciaSQL);
            return Rol;
        }
    }
}
